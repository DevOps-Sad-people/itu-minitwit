---
name: Continuous Deployment

on:
  push:
    # Run workflow every time something is pushed to the main branch
    branches:
      - main
      - 70-build-and-test

# Remember to set the following secrets in your repository's settings:
# https://github.com/your_username/itu-minitwit-ci/settings/secrets/actions
# DOCKER_USERNAME
# DOCKER_PASSWORD
# SSH_USER
# SSH_KEY
# SSH_HOST

# env variables
env:
  DROPLET_NAME: "itu-minitwit"
  REGISTRY_NAME: "registry.digitalocean.com/sad-containers"
  SSH_USER: "root"
  SSH_HOST: "209.38.233.233"
  DATABASE_PATH: ${{secrets.DATABASE_PATH}}
  SECRET_KEY: ${{secrets.SECRET_KEY}}
  SIM_TRACKER_FILE: ${{secrets.SIM_TRACKER_FILE}}

# I've split the workflow into three jobs: build_and_push, test, and deploy.
# The three jobs makes it easy to see which part fails in the Github Actions UI.

jobs:
  # build_and_push:
  #   runs-on: ubuntu-latest

    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2

    #   - name: Install doctl
    #     uses: digitalocean/action-doctl@v2
    #     with:
    #       token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    #   - name: Log in to DigitalOcean Container Registry with short-lived credentials
    #     run: doctl registry login --expiry-seconds 600

    #     # print the SHA of the commit
    #   - name: Print SHA
    #     run: echo $GITHUB_SHA

    #   # check rate limit for digital ocean
    #   - name: Check rate limit
    #     run: doctl account ratelimit --format Remaining

    #   # BUILD AND PUSH MINITWIT IMAGE - works now?
    #   - name: Build container image
    #     run: docker build -t ${{ secrets.REGISTRY_NAME }}/minitwit:$(echo $GITHUB_SHA | head -c7) .

    #   # get image size in mib
    #   - name: Get image size
    #     run: docker images ${{ secrets.REGISTRY_NAME }}/minitwit:$(echo $GITHUB_SHA | head -c7) --format "{{.Size}}"

    #   - name: Push image to DigitalOcean Container Registry
    #     run: docker push ${{ secrets.REGISTRY_NAME }}/minitwit:$(echo $GITHUB_SHA | head -c7)


      


  test:
    runs-on: ubuntu-latest
    # needs: build_and_push

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run tests
        run: docker compose -f docker-compose.testing.yml up --abort-on-container-exit
        env:
          DATABASE_PATH: ${{secrets.DATABASE_PATH}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          SIM_TRACKER_FILE: ${{secrets.SIM_TRACKER_FILE}}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  #     - name: Log in to DigitalOcean Container Registry with short-lived credentials
  #       run: doctl registry login --expiry-seconds 600

  #     # SSH INTO MACHINE AND RUN deploy.sh

  #     - name: SSH into the machine and run deploy.sh
  #       run: ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' < deploy.sh
