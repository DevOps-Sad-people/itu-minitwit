---
name: Continuous Deployment

on:
  push:
    # Run workflow every time something is pushed to the main branch
    branches:
      - main
      - 67_github_action_setup_and_login
      - 71-github-actions-ssh-into-machine-pull-latest-images-and-restart

# Remember to set the following secrets in your repository's settings:
# https://github.com/your_username/itu-minitwit-ci/settings/secrets/actions
# DOCKER_USERNAME
# DOCKER_PASSWORD
# SSH_USER
# SSH_KEY
# SSH_HOST

# env variables
env:
  DROPLET_NAME: "itu-minitwit"
  REGISTRY_NAME: "registry.digitalocean.com/sad-containers"

# I've split the workflow into three jobs: build_and_push, test, and deploy.
# The three jobs makes it easy to see which part fails in the Github Actions UI.

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

        # print the SHA of the commit
      - name: Print SHA
        run: echo $GITHUB_SHA

      # check rate limit for digital ocean
      - name: Check rate limit
        run: doctl account ratelimit --format Remaining

      # BUILD AND PUSH MINITWIT IMAGE - works now?
      - name: Build container image
        run: docker build -t ${{ env.REGISTRY_NAME }}/minitwit:latest .

      # get image size in mib
      - name: Get image size
        run: docker images ${{ env.REGISTRY_NAME }}/minitwit:$(echo $GITHUB_SHA | head -c7) --format "{{.Size}}"

      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{ env.REGISTRY_NAME }}/minitwit:latest

  test:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

        # Pull the images from the registry

        # Run the tests

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pull and deploy the images
        run: >
          ssh $SSH_USER@$SSH_HOST
          -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no
          '/minitwit/deploy.sh'
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
