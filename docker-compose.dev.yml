version: "3.8" # version to be compatible with docker swarm/stack deployments

services:
  dev:
    image: ruby:3.3
    container_name: minitwit_dev
    volumes:
      - .:/app # Mount your project directory into the container
    working_dir: /app
    entrypoint:
      ["/bin/bash", "-c", "bundle install && ruby minitwit.rb && /bin/bash"]
    depends_on:
      - db
    networks:
      - minitwit_network_dev
    ports:
      - "4567:4567" # Exposing the default Sinatra port, adjust as needed
    env_file:
      - .env

  db:
    image: postgres:15
    container_name: minitwit_dev_db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - minitwit_network_dev
    volumes:
      - pg_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - minitwit_network_dev

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    env_file:
      - .env
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/alerting:/etc/grafana/provisioning/alerting
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/predefined-dashboards:/predefined-dashboards
    ports:
      - "3000:3000"
    networks:
      - minitwit_network_dev

  setup:
    profiles:
      - setup
    build:
      context: elk/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./elk/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./elk/setup/lib.sh:/lib.sh:ro,Z
      - ./elk/setup/roles:/roles:ro,Z
    env_file:
      - .env
    networks:
      - minitwit_elk
    depends_on:
      - elasticsearch

  elasticsearch:
    container_name: elasticsearch
    build:
      context: elk/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch-data:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
    environment:
      node.name: elasticsearch
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    env_file:
      - .env
    networks:
      - minitwit_elk
    restart: unless-stopped

  logstash:
    container_name: logstash
    build:
      context: elk/logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
    env_file:
      - .env
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    networks:
      - minitwit_elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    container_name: kibana
    build:
      context: elk/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    env_file:
      - .env
    networks:
      - minitwit_elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat: # Uses another docker compose file to setup filebeat.
    container_name: filebeat
    extends:
      file: elk/filebeat/filebeat-compose.yml
      service: filebeat

networks:
  minitwit_network_dev:
    driver: bridge
  minitwit_elk:
    driver: bridge

volumes:
  pg_data:
  prometheus-data:
  grafana-data:
  elasticsearch-data:
