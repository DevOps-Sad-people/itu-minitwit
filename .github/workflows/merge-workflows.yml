---
name: Test merged workflows

on:
  push:
    branches:
      - 162-merge-workflows-build-and-test

# env variables
env:
  DROPLET_NAME: "minitwit-staging"
  REGISTRY_NAME: "registry.digitalocean.com/sad-containers"
  SSH_USER: "root"
  SSH_HOST: "157.245.22.36" # refers to the reserved IP address of the droplet

jobs:
  #  build:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v4
  #
  #      - name: Install doctl
  #        uses: digitalocean/action-doctl@v2
  #        with:
  #          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  #
  #      - name: Log in to DigitalOcean Container Registry with short-lived credentials
  #        run: doctl registry login --expiry-seconds 600
  #
  #      - name: Build container image
  #        run: docker build -t ${{ env.REGISTRY_NAME }}/minitwit:processing .
  #
  #      - name: Push image to DigitalOcean Container Registry
  #        run: docker push ${{ env.REGISTRY_NAME }}/minitwit:processing

  test:
    runs-on: ubuntu-latest
    #needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Setup environment variables
        run: cp .env.test .env

      - name: Run Ruby Tests
        run: |
          docker compose -f docker-compose.github.yml run web rspec

      - name: Setup E2E Environment
        run: |
          docker compose -f docker-compose.github.yml up -d
          sudo apt-get update
          sudo apt-get install -y python3
          pip install -r simulator/requirements.txt -r requirements.txt

      - name: Install browser for E2E
        run: python3 -m playwright install --with-deps

      - name: Run your E2E tests
        run: pytest --tracing=retain-on-failure

      - name: Setup Simulator Environment
        run: |
          docker compose -f docker-compose.github.yml down -v
          docker compose -f docker-compose.github.yml up -d

      - name: Run Simulator tests
        run: |
          cd simulator
            python3 minitwit_simulator_test.py http://0.0.0.0:4567 || (docker logs minitwit && exit 1)

  deploy:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo -e "Host $SSH_HOST\n\tStrictHostKeyChecking no\n\tIdentityFile ~/.ssh/id_ed25519" > ~/.ssh/config
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Copy remote_files to server
        run: scp -r ./remote_files/* $SSH_USER@$SSH_HOST:/minitwit
        env:
          SSH_USER: ${{ env.SSH_USER }}
          SSH_HOST: ${{ env.SSH_HOST }}

      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: >
          ssh $SSH_USER@$SSH_HOST
          'cd /minitwit; ./deploy.sh'
        env:
          SSH_USER: ${{ env.SSH_USER }}
          SSH_HOST: ${{ env.SSH_HOST }}
